{"ast":null,"code":"var _jsxFileName = \"/Users/kellyripple/Sandbox/wordle/src/components/Keyboard.tsx\",\n    _s = $RefreshSig$();\n\nimport { keyboardLetters, status, letters } from '../constants';\nimport { useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Keyboard = _ref => {\n  _s();\n\n  let {\n    letterStatuses,\n    addLetter,\n    onEnterPress,\n    onDeletePress,\n    gameDisabled\n  } = _ref;\n\n  const getKeyStyle = letter => {\n    switch (letterStatuses[letter]) {\n      case status.green:\n        return 'bg-n-green text-gray-50';\n\n      case status.yellow:\n        return 'bg-yellow-500 text-gray-50';\n\n      case status.gray:\n        return 'bg-n-gray text-gray-50';\n\n      default:\n        return 'text-primary dark:text-primary-dark';\n    }\n  };\n\n  const onKeyButtonPress = letter => {\n    letter = letter.toLowerCase();\n    window.dispatchEvent(new KeyboardEvent('keydown', {\n      key: letter\n    }));\n  };\n\n  const handleKeyDown = useCallback(event => {\n    if (gameDisabled) return;\n    const letter = event.key.toUpperCase();\n\n    if (letters.includes(letter)) {\n      addLetter(letter);\n    } else if (letter === 'ENTER') {\n      onEnterPress();\n      event.preventDefault();\n    } else if (letter === 'BACKSPACE') {\n      onDeletePress();\n    }\n  }, [addLetter, onEnterPress, onDeletePress, gameDisabled]);\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex flex-col items-center mb-3 select-none h-auto justify-end\",\n    children: keyboardLetters.map((row, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex justify-center my-[5px]\",\n      children: [idx === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onEnterPress,\n        className: \"h-10 xxs:h-14 w-12 px-1 text-xs font-medium mx-[3.5px] rounded nm-flat-background-sm dark:nm-flat-background-dark-sm text-primary dark:text-primary-dark\",\n        children: \"ENTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), row.map(letter => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onKeyButtonPress(letter),\n        className: \"h-10 xxs:h-14 w-[2rem] sm:w-10 mx-[3.5px] text-sm font-medium rounded-[4px] nm-flat-background-sm dark:nm-flat-background-dark-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `h-full w-full rounded-[3px] flex items-center justify-center ${getKeyStyle(letter)}`,\n          children: letter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, letter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)), idx === 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onDeletePress,\n        className: \"h-10 xxs:h-14 w-12 flex items-center justify-center nm-flat-background-sm dark:nm-flat-background-dark-sm text-primary dark:text-primary-dark mx-[3.5px] text-sm  rounded\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-6 w-6\",\n          fill: \"none\",\n          viewBox: \"0 0 24 24\",\n          stroke: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 1.5,\n            d: \"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, idx, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Keyboard, \"0JgXOssVubdPSer79HeWAJtecaU=\");\n\n_c = Keyboard;\nexport { Keyboard };\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["/Users/kellyripple/Sandbox/wordle/src/components/Keyboard.tsx"],"names":["keyboardLetters","status","letters","useEffect","useCallback","Keyboard","letterStatuses","addLetter","onEnterPress","onDeletePress","gameDisabled","getKeyStyle","letter","green","yellow","gray","onKeyButtonPress","toLowerCase","window","dispatchEvent","KeyboardEvent","key","handleKeyDown","event","toUpperCase","includes","preventDefault","addEventListener","removeEventListener","map","row","idx"],"mappings":"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","sourcesContent":["import { keyboardLetters, status, letters } from '../constants'\nimport { useEffect, useCallback } from 'react'\n\ntype Props = {\n  letterStatuses: { [key: string]: string }\n  gameDisabled: boolean\n  onDeletePress: () => void\n  onEnterPress: () => void\n  addLetter: any\n}\n\nconst Keyboard = ({\n  letterStatuses,\n  addLetter,\n  onEnterPress,\n  onDeletePress,\n  gameDisabled,\n}: Props) => {\n  const getKeyStyle = (letter: string) => {\n    switch (letterStatuses[letter]) {\n      case status.green:\n        return 'bg-n-green text-gray-50'\n      case status.yellow:\n        return 'bg-yellow-500 text-gray-50'\n      case status.gray:\n        return 'bg-n-gray text-gray-50'\n      default:\n        return 'text-primary dark:text-primary-dark'\n    }\n  }\n\n  const onKeyButtonPress = (letter: string) => {\n    letter = letter.toLowerCase()\n    window.dispatchEvent(\n      new KeyboardEvent('keydown', {\n        key: letter,\n      })\n    )\n  }\n\n  const handleKeyDown = useCallback(\n    (event) => {\n      if (gameDisabled) return\n\n      const letter = event.key.toUpperCase()\n\n      if (letters.includes(letter)) {\n        addLetter(letter)\n      } else if (letter === 'ENTER') {\n        onEnterPress()\n        event.preventDefault()\n      } else if (letter === 'BACKSPACE') {\n        onDeletePress()\n      }\n    },\n    [addLetter, onEnterPress, onDeletePress, gameDisabled]\n  )\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [handleKeyDown])\n\n  return (\n    <div className=\"w-full flex flex-col items-center mb-3 select-none h-auto justify-end\">\n      {keyboardLetters.map((row, idx) => (\n        <div key={idx} className=\"w-full flex justify-center my-[5px]\">\n          {idx === 2 && (\n            <button\n              onClick={onEnterPress}\n              className=\"h-10 xxs:h-14 w-12 px-1 text-xs font-medium mx-[3.5px] rounded nm-flat-background-sm dark:nm-flat-background-dark-sm text-primary dark:text-primary-dark\"\n            >\n              ENTER\n            </button>\n          )}\n          {row.map((letter) => (\n            <button\n              onClick={() => onKeyButtonPress(letter)}\n              key={letter}\n              className=\"h-10 xxs:h-14 w-[2rem] sm:w-10 mx-[3.5px] text-sm font-medium rounded-[4px] nm-flat-background-sm dark:nm-flat-background-dark-sm\"\n            >\n              <div\n                className={`h-full w-full rounded-[3px] flex items-center justify-center ${getKeyStyle(\n                  letter\n                )}`}\n              >\n                {letter}\n              </div>\n            </button>\n          ))}\n          {idx === 2 && (\n            <button\n              onClick={onDeletePress}\n              className=\"h-10 xxs:h-14 w-12 flex items-center justify-center nm-flat-background-sm dark:nm-flat-background-dark-sm text-primary dark:text-primary-dark mx-[3.5px] text-sm  rounded\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                className=\"h-6 w-6\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={1.5}\n                  d=\"M12 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2M3 12l6.414 6.414a2 2 0 001.414.586H19a2 2 0 002-2V7a2 2 0 00-2-2h-8.172a2 2 0 00-1.414.586L3 12z\"\n                />\n              </svg>\n            </button>\n          )}\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport { Keyboard }\n"]},"metadata":{},"sourceType":"module"}